<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.ExaminationDao">

    <select id="findFiveByTestId" parameterType="com.example.demo.entity.ReceiveEntity" resultType="com.example.demo.entity.Talent">
        select * from talent_pool
        where
        unit = #{userUnit}
        ORDER BY cast(grade as UNSIGNED INTEGER) desc LIMIT 0,10
    </select>

    <select id="findRatioById" parameterType="com.example.demo.entity.ReceiveEntity" resultType="java.lang.Integer">
        select count(*) from talent_pool
        where
        testId = #{targetID}
        and grade >= #{min}
        and grade <![CDATA[<]]> #{max}
    </select>

    <select id="findExamination" parameterType="com.example.demo.entity.ReceiveEntity" resultType="com.example.demo.entity.Examination">
        select * from examination
        where unit = #{userUnit}
        ORDER BY id desc LIMIT #{page},#{number}
    </select>

    <select id="findExaminationWithKey" parameterType="com.example.demo.entity.ReceiveEntity" resultType="com.example.demo.entity.Examination">
        select * from examination
        where unit = #{userUnit} and `status` = #{key}
        ORDER BY id desc LIMIT #{page},#{number}
    </select>

    <select id="findExaminationNumber" parameterType="com.example.demo.entity.ReceiveEntity" resultType="java.lang.Integer">
        select count(*) from examination
        where unit = #{userUnit}
    </select>

    <select id="findExaminationNumberWithKey" parameterType="com.example.demo.entity.ReceiveEntity" resultType="java.lang.Integer">
        select count(*) from examination
        where unit = #{userUnit} and `status` = #{key}
    </select>

    <update id="finishExam" parameterType="com.example.demo.entity.ReceiveEntity">
        update examination
        set
        status=#{remark}
        where
        id = #{targetID}
    </update>

    <insert id="addExamination" useGeneratedKeys="true" keyProperty="id" parameterType="com.example.demo.entity.Examination">
        insert into examination
        (name,beginTime,status,type,unit,continueTime,remark,endTime,questionNumber,pictureNumber,limitNumber)
        VALUES
        (#{name},#{beginTime},#{status},#{type},#{unit},#{continueTime},#{remark},#{endTime},#{questionNumber},#{pictureNumber},#{limitNumber})
    </insert>

    <select id="findExamUser" parameterType="com.example.demo.entity.ReceiveEntity" resultType="com.example.demo.entity.User">
        select * from user
        where userUnit = #{userUnit} and userType = 3
    </select>

    <insert id="addExaminee" parameterType="com.example.demo.entity.UserAndExam" useGeneratedKeys="true" keyProperty="id">
        insert into test_person
        (userId,examinationId,beginTime,continueTime,endTime,userName)
        value
        (#{userId},#{examinationId},#{beginTime},#{continueTime},#{endTime},#{userName})
    </insert>


    <select id="findEndTest"  resultType="com.example.demo.entity.Examination">
        select * from examination
        where unit = #{unit} and status = "已结束"
        ORDER BY id desc
    </select>

    <delete id="deleteExam">
        delete from examination
        where id = #{targetID}
    </delete>

    <select id="findAllTalent" parameterType="com.example.demo.entity.ReceiveEntity" resultType="com.example.demo.entity.Talent">
        select * from talent_pool
        where unit = #{userUnit} and testId is null
        ORDER BY id desc
    </select>

    <insert id="addExamProblem" parameterType="com.example.demo.entity.TestProblem">
        insert into test_question
        (testId,problemId)
        value
        (#{testId},#{problemId})
    </insert>

    <update id="updateExaminee" parameterType="com.example.demo.entity.UserAndExam">
        update test_person
        set
        examinationId=#{examinationId},
        beginTime=#{beginTime},
        continueTime=#{continueTime},
        endTime=#{endTime},
        userName=#{userName},
        userAccountId=#{userAccountId}
        where
        id = #{id}
    </update>

    <select id="findProblemData" parameterType="com.example.demo.entity.ReceiveEntity" resultType="com.example.demo.entity.TestProblem">
        select * from test_question
        where testId = #{targetID}
        ORDER BY id desc
    </select>

    <select id="findUserData" parameterType="com.example.demo.entity.ReceiveEntity" resultType="com.example.demo.entity.UserAndExam">
        select * from test_person
        where examinationId = #{targetID}
        ORDER BY id desc
    </select>

    <select id="findUserById" parameterType="com.example.demo.entity.ReceiveEntity" resultType="com.example.demo.entity.User">
        select * from user
        where id = #{userAccountId}
    </select>

    <select id="findExaminationById" parameterType="java.lang.Integer" resultType="com.example.demo.entity.Examination">
        select * from examination
        where id = #{targetID}
    </select>

    <update id="updateTalentTest">
        update talent_pool
        set
        testId = #{testId}
        where
        id = #{id}
    </update>

    <select id="findTestPersonByTestId" parameterType="com.example.demo.entity.ReceiveEntity" resultType="com.example.demo.entity.UserAndExam">
        select * from test_person
        where examinationId = #{targetID}
    </select>
</mapper>